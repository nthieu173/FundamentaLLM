services:
  api:
    build: .
    environment:
      - POSTGRES_DB
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_HOST=db
      - DEEPINFRA_API_KEY
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "8000:8000"
    restart: unless-stopped
    develop:
      watch:
        - action: sync
          path: ./backend
          target: /app/backend
        - action: rebuild
          path: ./pyproject.toml
    command: [ "uv", "run", "uvicorn", "--workers", "1", "backend.main:app", "--host", "0.0.0.0", "--port", "8000", "--reload" ]

  db:
    image: postgres:17
    environment:
      - POSTGRES_DB
      - POSTGRES_USER
      - POSTGRES_PASSWORD
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB -h 127.0.0.1 -p 5432" ]
      interval: 5s
      timeout: 5s
      retries: 10
    ports:
      - "5432:5432"
    restart: unless-stopped

volumes:
  db_data:


